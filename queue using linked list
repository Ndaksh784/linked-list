include<stdio.h> 
#include<stdlib.h> 

typedef struct node 
{ 
    int info; 
    struct node *next; 
}node; 
node* createNode(int data) 
{ 
    node*temp=(node*)malloc(sizeof(node)); 
    temp->info=data; 
    temp->next=NULL; 
    return temp; 
} 
typedef struct queue 
{ 
    node*front; 
    node*rear; 
}queue; 
queue* initialize() 
{ 
    queue*q=(queue*)malloc(sizeof(queue)); 
    q->rear=q->front=NULL; 
    return q; 
}
void enqueue(queue*q,int data){
    node*temp=createNode(data);
    if(!temp){
        printf("not efficient");

    }
    else if(q->front==NULL&&q->rear==NULL){
        q->front=temp;
        q->rear=temp;
    }
    else{
        q->rear->next=temp;
        q->rear=temp;
    }
}
dequeue(queue*q){
    if(q->front==NULL){
        printf("Empty linked list");
    }
    else{
        int v=q->front->info;
        node*temp=q->front;
        q->front=q->front->next;
        return v;
    }
}
void display(queue *q){
    node*temp=q->front;
    while(temp!=NULL){
        printf("%d \n",temp->info);
        temp=temp->next;
    }
}
int main(){
    queue*q=initialize();
    enqueue(q,34);
    enqueue(q,78);
    enqueue(q,99);
    enqueue(q,41);
    enqueue(q,01);
    display(q);
    printf("linked list after poppping\n");
    dequeue(q);
    dequeue(q);
    dequeue(q);
    display(q);

}
